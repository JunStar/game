SinuousWorld = new(function() {
    function n() {
        if (o == false) {
            o = true;
            m = [];
            v = [];
            h = 0;
            r = 1;
            A = J = K = L = 0;
            c.trail = [];
            c.position.x = y;
            c.position.y = z;
            c.shield = 0;
            s.style.display = "none";
            q.style.display = "block";
            B.style.display = "none";
            C = (new Date).getTime()
        }
    }
    function t() {
        o = false;
        R = (new Date).getTime() - C;
        aa();
        s.style.display = "block";
        h = Math.round(h);
        S.innerHTML = "游戏结束! (" + h + " 分)";
        scoreText = "分数: <span id="gscore">" + Math.round(h) + "</span>";
        scoreText += " 时间: <span>" + Math.round(((new Date).getTime() - C) / 1E3 * 100) / 100 + "s</span>";
        q.innerHTML = scoreText
        ajax = new XMLHttpRequest();
        ajax.open('GET', '/materials/report?game_id=48&score=' + Math.round(h), true);
        ajax.send(null);
    }
    function ba() {
        for (var a = g.length < 10,
        b = 0; b < g.length; b++) if (h > g[b].score) {
            a = true;
            break
        }
        if (a) if (!D.value || D.value == " ") alert("Name can not be empty.");
        else {
            ca();
            B.style.display = "none"
        }
    }
    function aa() {

    }
    function da() {

    }
    function ca() {
        var a = D.value,
        b = Math.round(R / 1E3 * 100) / 100;   }
    function M() {
        if (g) {
            for (var a = "",
            b = 0; b < g.length; b++) {
                a += "<li>";
                a += '<span class="place">' + (b + 1) + ".</span>";
                a += '<span class="name">' + g[b].name + "</span>";
                a += '<span class="score">' + g[b].score + " p</span>";
                a += '<span class="date">' + g[b].date + "</span>";
                a += "</li>"
            }
            U.innerHTML = a
        }
    }
    function ea(a) {
        y = a.clientX - (window.innerWidth - l) * 0.5 - 6;
        z = a.clientY - (window.innerHeight - k) * 0.5 - 6
    }
    function fa() {
        E = true
    }
    function ga() {
        E = false
    }
    function ha(a) {
        if (a.touches.length == 1) {
            a.preventDefault();
            y = a.touches[0].pageX - (window.innerWidth - l) * 0.5;
            z = a.touches[0].pageY - (window.innerHeight - k) * 0.5;
            E = true
        }
    }
    function ia(a) {
        if (a.touches.length == 1) {
            a.preventDefault();
            y = a.touches[0].pageX - (window.innerWidth - l) * 0.5 - 60;
            z = a.touches[0].pageY - (window.innerHeight - k) * 0.5 - 30
        }
    }
    function ja() {
        E = false
    }
    function V() {
        l = w ? window.innerWidth: 900;
        k = w ? window.innerHeight: 550;
        j.width = l;
        j.height = k;
        var a = (window.innerWidth - l) * 0.5,
        b = (window.innerHeight - k) * 0.5;
        j.style.position = "absolute";
        j.style.left = a + "px";
        j.style.top = b + "px";
        if (w) {
            s.style.left = "0px";
            s.style.top = "0px";
            q.style.left = "0px";
            q.style.top = "0px"
        } else {
            s.style.left = a + 6 + "px";
            s.style.top = b + 200 + "px";
            q.style.left = a + 6 + "px";
            q.style.top = b + 6 + "px"
        }
        F.style.position = "absolute";
        F.style.left = a + "px";
        F.style.top = b - 20 + "px"
    }
    function G(a, b) {
        for (var d = 10 + Math.random() * 15; --d >= 0;) {
            var i = new Point;
            i.position.x = a.x + Math.sin(d) * b;
            i.position.y = a.y + Math.cos(d) * b;
            i.velocity = {
                x: -4 + Math.random() * 8,
                y: -4 + Math.random() * 8
            };
            i.alpha = 1;
            H.push(i)
        }
    }
    function W() {
        var a = (new Date).getTime();
        P++;
        if (a > Q + 1E3) {
            u = Math.min(Math.round(P * 1E3 / (a - Q)), x);
            N = Math.min(N, u);
            O = Math.max(O, u);
            Q = a;
            P = 0
        }
        a = 0.01 + Math.max(Math.min(u, x), 0) / x * 0.99;
        a *= a;
        f.clearRect(0, 0, j.width, j.height);
        var b = {
            x: I.x * r,
            y: I.y * r
        },
        d,
        i;
        if (o) {
            r += 8.0E-4;
            pp = c.clonePosition();
            c.position.x += (y - c.position.x) * 0.14;
            c.position.y += (z - c.position.y) * 0.14;
            h += 0.4 * r * a;
            h += c.distanceTo(pp) * 0.1 * a;
            L++;
            K += 0.4 * r * a;
            J += c.distanceTo(pp) * 0.1 * a;
            c.shield = Math.max(c.shield - 1, 0);
            if (c.shield > 0 && (c.shield > 100 || c.shield % 3 != 0)) {
                f.beginPath();
                f.fillStyle = "#167a66";
                f.strokeStyle = "#00ffcc";
                f.arc(c.position.x, c.position.y, c.size * (Math.min(c.shield, 100) / 50), 0, Math.PI * 2, true);
                f.fill();
                f.stroke()
            }
            c.trail.push(new Point(c.position.x, c.position.y));
            f.beginPath();
            f.strokeStyle = "#648d93";
            f.lineWidth = 2;
            d = 0;
            for (i = c.trail.length; d < i; d++) {
                p = c.trail[d];
                p2 = c.trail[d + 1];
                if (d == 0) f.moveTo(p.position.x, p.position.y);
                else p2 && f.quadraticCurveTo(p.position.x, p.position.y, p.position.x + (p2.position.x - p.position.x) / 2, p.position.y + (p2.position.y - p.position.y) / 2);
                p.position.x += b.x;
                p.position.y += b.y
            }
            f.stroke();
            f.closePath();
            c.trail.length > 60 && c.trail.shift();
            f.beginPath();
            f.fillStyle = "#8ff1ff";
            f.arc(c.position.x, c.position.y, c.size / 2, 0, Math.PI * 2, true);
            f.fill()
        }
        if (o && (c.position.x < 0 || c.position.x > l || c.position.y < 0 || c.position.y > k)) {
            G(c.position, 10);
            t()
        }
        for (d = 0; d < m.length; d++) {
            p = m[d];
            if (o) if (c.shield > 0 && p.distanceTo(c.position) < (c.size * 4 + p.size) * 0.5) {
                G(p.position, 10);
                m.splice(d, 1);
                d--;
                h += 10 * a;
                A += 10 * a;
                continue
            } else if (p.distanceTo(c.position) < (c.size + p.size) * 0.5) {
                G(c.position, 10);
                t()
            }
            f.beginPath();
            f.fillStyle = "#ff0000";
            f.arc(p.position.x, p.position.y, p.size / 2, 0, Math.PI * 2, true);
            f.fill();
            p.position.x += b.x * p.force;
            p.position.y += b.y * p.force;
            if (p.position.x < -p.size || p.position.y > k + p.size) {
                m.splice(d, 1);
                d--
            }
        }
        for (d = 0; d < v.length; d++) {
            p = v[d];
            if (p.distanceTo(c.position) < (c.size + p.size) * 0.5 && o) {
                c.shield = 300;
                for (i = 0; i < m.length; i++) {
                    e = m[i];
                    if (e.distanceTo(p.position) < 100) {
                        G(e.position, 10);
                        m.splice(i, 1);
                        i--;
                        h += 10 * a;
                        A += 10 * a
                    }
                }
            }
            f.beginPath();
            f.fillStyle = "#00ffcc";
            f.arc(p.position.x, p.position.y, p.size / 2, 0, Math.PI * 2, true);
            f.fill();
            p.position.x += b.x * p.force;
            p.position.y += b.y * p.force;
            if (p.position.x < -p.size || p.position.y > k + p.size || c.shield != 0) {
                v.splice(d, 1);
                d--
            }
        }
        m.length < 35 * r && m.push(X(new Enemy));
        v.length < 1 && Math.random() > 0.997 && c.shield == 0 && v.push(X(new Shield));
        for (d = 0; d < H.length; d++) {
            p = H[d];
            p.velocity.x += (b.x - p.velocity.x) * 0.04;
            p.velocity.y += (b.y - p.velocity.y) * 0.04;
            p.position.x += p.velocity.x;
            p.position.y += p.velocity.y;
            p.alpha -= 0.02;
            f.fillStyle = "rgba(255,255,255," + Math.max(p.alpha, 0) + ")";
            f.fillRect(p.position.x, p.position.y, 1, 1);
            p.alpha <= 0 && H.splice(d, 1)
        }
        if (o) {
            scoreText = "分数: <span>" + Math.round(h) + "</span>";
            scoreText += " 时间: <span>" + Math.round(((new Date).getTime() - C) / 1E3 * 100) / 100 + "s</span>";
            scoreText += ' <p class="fps">FPS: <span>' + Math.round(u) + " (" + Math.round(Math.max(Math.min(u / x, x), 0) * 100) + "%)</span></p>";
            q.innerHTML = scoreText
        }
    }
    function X(a) {
        if (Math.random() > 0.5) {
            a.position.x = Math.random() * l;
            a.position.y = -20
        } else {
            a.position.x = l + 20;
            a.position.y = -k * 0.2 + Math.random() * k * 1.2
        }
        return a
    }
    var w = navigator.userAgent.toLowerCase().indexOf("android") != -1 || navigator.userAgent.toLowerCase().indexOf("iphone") != -1 || navigator.userAgent.toLowerCase().indexOf("ipad") != -1,
    Y = window.XMLHttpRequest != null,
    l = w ? window.innerWidth: 900,
    k = w ? window.innerHeight: 550,
    x = 60,
    j,
    f,
    q,
    s,
    S,
    Z,
    F,
    m = [],
    v = [],
    H = [],
    c,
    y = window.innerWidth - l,
    z = window.innerHeight - k,
    E = false,
    o = false,
    h = 0,
    C = 0,
    R = 0,
    r = 1,
    L = 0,
    K = 0,
    J = 0,
    A = 0,
    I = {
        x: -1.3,
        y: 1
    },
    u = 0,
    N = 1E3,
    O = 0,
    Q = (new Date).getTime(),
    P = 0,
    g = [],
    U,
    B,
    D,
    $,
    T;
    this.init = function() {
        j = document.getElementById("world");
        s = document.getElementById("panels");
        q = document.getElementById("status");
        document.getElementById("message");
        S = document.getElementById("title");
        Z = document.getElementById("startButton");
        F = document.getElementById("seeMore");
        /*document.getElementById("highscoreList");
        U = document.getElementById("highscoreOutput");
        B = document.getElementById("highscoreWin");
        D = document.getElementById("highscoreInput");
        $ = document.getElementById("highscoreSubmit");
        T = document.getElementById("highscorePlace");*/
        if (j && j.getContext) {
            f = j.getContext("2d");
            document.addEventListener("mousemove", ea, false);
            document.addEventListener("mousedown", fa, false);
            document.addEventListener("mouseup", ga, false);
            j.addEventListener("touchstart", ha, false);
            document.addEventListener("touchmove", ia, false);
            document.addEventListener("touchend", ja, false);
            window.addEventListener("resize", V, false);
            Z.addEventListener("click", n, false);
            //$.addEventListener("click", ba, false);
            c = new Player;
            V();
            if (w) {
                document.getElementById("sharing").style.display = "none";
                document.getElementById("panel").style.display = "none";
                q.style.width = l + "px";
                j.style.border = "none";
                I.x *= 2;
                I.y *= 2;
                setInterval(W, 1E3 / 30)
            } else setInterval(W, 1E3 / x);
            da()
        }
    };


});
function Point(n, t) {
    this.position = {
        x: n,
        y: t
    }
}
Point.prototype.distanceTo = function(n) {
    var t = n.x - this.position.x;
    n = n.y - this.position.y;
    return Math.sqrt(t * t + n * n)
};
Point.prototype.clonePosition = function() {
    return {
        x: this.position.x,
        y: this.position.y
    }
};
function Player() {
    this.position = {
        x: 0,
        y: 0
    };
    this.trail = [];
    this.size = 8;
    this.shield = 0
}
Player.prototype = new Point;
function Enemy() {
    this.position = {
        x: 0,
        y: 0
    };
    this.size = 6 + Math.random() * 4;
    this.force = 1 + Math.random() * 0.4
}
Enemy.prototype = new Point;
function Shield() {
    this.position = {
        x: 0,
        y: 0
    };
    this.size = 10 + Math.random() * 8;
    this.force = 1 + Math.random() * 0.4
}
Shield.prototype = new Point;
SinuousWorld.init();
